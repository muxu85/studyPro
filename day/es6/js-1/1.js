起始

JavaScript

什么是js？
（1）本质上说， js是一种轻量级的脚本语言。
什么是脚本语言？
脚本语言不具备开发操作系统的能力，而是用来编写控制大型应用程序的脚本。

（2）从运行环境看，js是一种“嵌入式”语言。
为什么是嵌入式语言？
js本身提供的核心语法不算多，只能进行一些数学和逻辑运算，不提供任何与输入输出（I/O）相关的API，而要依靠宿主环境（host）提供。因此，js只能嵌入更大型的应用程序环境，去调用宿主环境提供的底层API。
注：
js本身不提供I/O相关的API-->即，js也就没有与外界和系统的通信能力，更不能够完成外设、管理内存、修改注册表等更低级行为，这些行为都交给了宿主环境去做。

什么是宿主环境？
回归回来，什么是宿主环境？个人认为，就是js进行依赖，并能够在这个环境中进行执行操作的环境。
通俗认为，宿主环境一般由外壳程序创建和维护，只要提供js引擎执行的环境都可称之为外壳程序，它不仅仅为JavaScript提供服务，往往一个宿主环境中可能运行很多种脚本语言。

哪些是宿主环境？
很多服务器、桌面应用系统都提供能够允许js引擎执行的运行环境，这些环境就是宿主环境。
如：
服务器node环境，会提供各种操作系统的api，文件操作api，网络通信api等等；
各种浏览器环境，如浏览器中window对象，document对象等等；
各种桌面应用系统等

（2）从语法角度看，js是一种“对象模型”语言。
各种宿主环境通过这个对象模型，描述自己的功能和接口，从而通过js控制这些功能

js核心语法：
js核心语法相当精简，只包括两部分：
（1）基本语法构造：控制结构、语句、操作符
（2）标准库：一系列各种功能的对象，如Array、Date、Math等
js语法除核心语法外，各种宿主环境提供其他的api，以便js调用。

以浏览器为例，他提供的api可以分为3大类：
浏览器控制类：操作浏览器
dom类：操作浏览器网页各种元素
web类：实现互联网各种功能

