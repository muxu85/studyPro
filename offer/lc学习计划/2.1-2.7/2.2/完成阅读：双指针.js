// 双指针技巧——情景一
// 来自： 《数组和字符串》

// 通常通过迭代数组解决一些问题，有时使用一个指针，有时使用双指针

// 先引入经典问题——反转数组

// 若使用双指针，思想如下：
// 两个指针分别指向数组的头和尾，然后将指向的元素进行交换，再将指针向中间移动一步，继续交换，直至这两个指针相遇。

// 例：实现 ['h','e','l','l','o'] 的反转

let arr = ['h', 'e', 'l', 'l', 'o']
for (var i = 0; i < arr.length/2; i++) {
  let temp;
  temp = arr[i]
  arr[i] = arr[arr.length - 1 - i]
  arr[arr.length - 1 - i] = temp
}
console.log(arr, 'arr')


// 总结：
// 使用双指针的场景之一，即：从两端向中间迭代数组；
// 这时可以使用双指针，一个指针指向头，另一个指针指向尾；
// 这种技巧通常在 数组排序 中用到